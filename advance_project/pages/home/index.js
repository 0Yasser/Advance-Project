import axios from 'axios'
import Head from 'next/head'
import Image from 'next/image'
import Router from 'next/router'
import { useEffect, useState } from 'react'
import { useDispatch, useSelector } from 'react-redux'
import styles from '../../styles/Home.module.css'
import { unvalidToken, validToken } from '../../reducers/token'
import { updateUserData } from '../../reducers/user'


export default function Home() {
    const state = useSelector((state) => {
        return{ user: state.user.userData, token:state.token.loginToken };
    });
  const dispatch = useDispatch()
  const [lat,setLat]=useState('')
  const [lon,setLon]=useState('')
  const [show,setShow]=useState(false)
  const [list,setList]=useState([])
  useEffect(()=>{
    axios.get('/user',{
        headers:{ Authorization: `Bearer ${document.cookie?.split('; ').find(e=>e.startsWith('hospitalsToken='))?.split('=')[1]}`}
      })
      .then(res=>{
        console.log('response',res.data); 
        dispatch(validToken())
        dispatch(updateUserData(res.data))
      })
      .catch(err=>{
        dispatch(unvalidToken())
        Router.push('/signin')
        console.log('catch err',err.response,'lll',localStorage?.getItem('hospitalsToken'));
      })

    if (navigator.geolocation) {
        navigator.geolocation.watchPosition(function(position) {
          setLat(position.coords.latitude)
          setLon(position.coords.longitude)
        });
      }
  },[])
  const updateIt = () => {
    setShow(!show)
    if (navigator.geolocation) {
        navigator.geolocation.watchPosition(function(position) {
          setLat(position.coords.latitude)
          setLon(position.coords.longitude)
          
        });
      }
  }
//   const getLocation = () => {
//     if (navigator.geolocation) {
//         navigator.geolocation.watchPosition(showPosition);
//       } else { 
//         GL.current = "Geolocation is not supported by this browser.";
//       }
    
//   }
//   const showPosition = (position) => {
//     GL.current="Latitude: " + position.coords.latitude + 
//     "<br>Longitude: " + position.coords.longitude;
// }
const findPlaces = () => {
    // types: hospital,doctor,dentist,pharmacy,phsiotherapist,drugstore
    
    axios.get(`/nearbySearch/${lat}-${lon}`,{
      headers:{ Authorization: `Bearer ${document.cookie?.split('; ').find(e=>e.startsWith('hospitalsToken='))?.split('=')[1]}`},
      })
    .then(res=>{
        console.log('search results',res)
        setList(res.data)
    })
    .catch(err=>{
        console.log('error fetching',err)
    })
}
  return (
    <div className={styles.container}>
      <Head>
        <title>HospitalFinder - Home -</title>
        <meta name="description" content="Generated by cna" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        
        <div className={styles.grid}>

          <button
          onClick={updateIt}
            className={styles.card}
          >
            <h2>Latitute &rarr; {show?lat:''}</h2>
            <h2>Longitute &rarr; {show?lon:''}</h2>
          </button>
          {/* <from className={styles.container}>
              <input type=""/>
          </from> */}
          <button onClick={findPlaces}>Find nearby</button>
          {/* <iframe 
  width="300" 
  height="170" 
  frameBorder="0" 
  scrolling="no" 
  marginHeight="0" 
  marginWidth="0" 
  src={`https://maps.google.com/maps?q=${lat},${lon}&hl=es&z=14&amp;output=embed`}
 >
 </iframe> */}
 <iframe width="500" 
  height="370" 
  frameBorder="0" 
  scrolling="no" 
  marginHeight="0" 
  marginWidth="0"  src={`https://maps.google.com/maps?q=${lat},${lon}&t=&z=15&ie=UTF8&iwloc=&output=embed`} />

        </div>
        <div className={styles.grid}>
             {list.length? list.map((e,i)=>{
                 return (<div className={styles.card} key={e?.place_id}>
                     <img src={e?.icon} alt="img"/>
                     {/* <p>{` ${e?.icon_background_color} ${e?.icon_mask_base_uri}`}</p> */}
                     <p>{e?.name}</p>
                     <p>Status: {e?.business_status}</p>
                     <p>Categories: {e?.types?.join(',')}</p>
                     {/* <p>{e?.scope}</p> */}
                     <p>{e?.rating} <span>from {e?.user_ratings_total}</span> user</p>
                     <p>{`${e?.geometry?.location?.lat} - ${e?.geometry?.location?.lng}`}</p>
                     {/* <p>{`${e?.viewport?.northeast?.lat} ${e?.viewport?.northeast?.lng} ${e?.viewport?.southeast?.lat} ${e?.viewport?.southeast?.lng}`}</p> */}
                     {/* <p>{e?.reference}</p> */}
                     {/* <p>{e?.vicinity}</p> */}
                      <iframe width="200" 
  height="170" 
  frameBorder="0" 
  scrolling="no" 
  marginHeight="0" 
  marginWidth="0"  src={`https://maps.google.com/maps?q=${e?.geometry?.location?.lat},${e?.geometry?.location?.lng}&t=&z=15&ie=UTF8&iwloc=&output=embed`} />
                 </div>)
             }):''}
             
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
